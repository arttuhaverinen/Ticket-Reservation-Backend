name: Deploy to VPS

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }} # Use your GitHub Secret for the SSH private key

      - name: SSH into VPS and deploy
        run: |
          ssh -o StrictHostKeyChecking=no  -p ${{ secrets.VPS_PORT }} ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "
          if [ ! -d \"${{ secrets.VPS_PROJECT_PATH }}/.git\" ]; then
            git clone git@github.com:your-username/your-repo.git ${{ secrets.VPS_PROJECT_PATH }};
          else
            cd ${{ secrets.VPS_PROJECT_PATH }} && git pull origin master;
          fi &&
          echo 'MINIO_ROOT_USER=${{ secrets.MINIO_ROOT_USER }}' > .env &&
          echo 'MINIO_ROOT_PASSWORD=${{ secrets.MINIO_ROOT_PASSWORD }}' >> .env &&
          cd ${{ secrets.VPS_PROJECT_PATH_ENV }} &&
          echo 'MINIO_ROOT_USER=${{ secrets.MINIO_ROOT_USER }}' > .env &&
          echo 'MINIO_ROOT_PASSWORD=${{ secrets.MINIO_ROOT_PASSWORD }}' >> .env &&
          echo 'DB_CONNECTION_STRING_PROD=${{ secrets.DB_CONNECTION_STRING_PROD }}' >> .env &&
          echo 'EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}' >> .env &&
          echo 'ELASTICSEARCH_URI=${{ secrets.ELASTICSEARCH_URI }}' >> .env &&
          echo 'EMAIL_FRONTEND_PROD=${{ secrets.EMAIL_FRONTEND_PROD }}' >> .env &&
          echo 'SECRET_KEY=${{ secrets.STRIPE_SECRET }}' >> .env &&
          echo 'MINIO_PROD_URL=${{ secrets.MINIO_PROD_URL }}' >> .env &&
          echo 'BACKEND_URL=${{ secrets.BACKEND_URL }}' >> .env &&
          echo 'GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}' >> .env &&
          echo 'GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}' >> .env &&
          echo 'PROD_DOMAIN=${{ secrets.PROD_DOMAIN }}' >> .env &&
          cd ${{ secrets.VPS_PROJECT_PATH }} &&
          sudo docker-compose -f docker-compose.prod.yml down --remove-orphans &&
          sudo docker network prune -f &&  # Prunes unused networks
          sudo docker-compose -f docker-compose.prod.yml up --build -d"  # Use production file
